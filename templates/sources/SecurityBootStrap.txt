package it.algos.@LOWERPACK@;

import it.algos.webbase.domain.ruolo.Ruolo;
import it.algos.webbase.domain.ruolo.TipoRuolo;
import it.algos.webbase.domain.utente.Utente;
import it.algos.webbase.domain.utenteruolo.UtenteRuolo;
import it.algos.webbase.web.lib.LibSecurity;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import java.util.ArrayList;

/**
 * Security BootStrap.<br>
 */
public  class SecurityBootStrap implements ServletContextListener {

	/**
	 * This method is called prior to the servlet context being
	 * initialized (when the Web application is deployed).
	 * You can initialize servlet context related data here.
	 * <p>
	 * Tutte le aggiunte, modifiche e patch vengono inserite con una versione <br>
	 * L'ordine di inserimento Ã¨ FONDAMENTALE
	 * <p>
	 * Se le versioni aumentano, conviene spostare in una classe esterna
	 */
	@Override
	public void contextInitialized(ServletContextEvent contextEvent) {
		creaRuoli();
	}// end of method

	/**
	 * Crea una serie di ruoli
	 * <p/>
	 * Alcuni generali controlla se esistono (dovrebbero esserci) e li crea solo se mancano (la prima volta)
	 * Alcuni specifici di questa applicazione e li crea
	 */
	private void creaRuoli() {
//		LibSecurity.checkRuoli();
	}// end of method

	/**
	 * Crea un utente con ruolo connesso <br>
	 */
	public static void creaUtente(String nickName, String password, String nomeRuolo) {
		Utente newUtente = Utente.read(nickName);
		UtenteRuolo userRole;
		Ruolo ruolo = Ruolo.read(nomeRuolo);

		if (newUtente == null) {
			newUtente = new Utente(nickName, password);
			newUtente.save();
			userRole = UtenteRuolo.read(newUtente, ruolo);
			if (userRole == null) {
				userRole = new UtenteRuolo(newUtente, ruolo);
				userRole.save();
			}// end of if cycle
		}// end of if cycle

	}// end of method

	/**
	 * This method is invoked when the Servlet Context
	 * (the Web application) is undeployed or
	 * WebLogic Server shuts down.
	 */
	@Override
	public void contextDestroyed(ServletContextEvent servletContextEvent) {
	}// end of method

}// end of class
